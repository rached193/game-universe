/*Competition*/
CREATE TABLE competition_data.COMPETITION (
	ID INTEGER,
	ORGANIZATION INTEGER NOT NULL,
	NAME character varying(50) NOT NULL,
	VIDEOGAME INTEGER NOT NULL,
	PLATFORM INTEGER NOT NULL,
	REGION INTEGER NOT NULL,
	GAMEMODE INTEGER NOT NULL,
	ENABLED BOOLEAN NOT NULL,
	PRIMARY KEY (ID),
	FOREIGN KEY (ORGANIZATION) REFERENCES user_data.ORGANIZATION (ID),
  FOREIGN KEY (VIDEOGAME) REFERENCES master_data.VIDEOGAME (ID),
  FOREIGN KEY (PLATFORM) REFERENCES master_data.PLATFORM (ID),
	FOREIGN KEY (REGION) REFERENCES master_data.REGION (ID),
	FOREIGN KEY (GAMEMODE) REFERENCES master_data.GAMEMODE (ID)
);

/*Phase*/
CREATE TABLE competition_data.PHASE (
	ID INTEGER,
	COMPETITION INTEGER NOT NULL,
	PHASE INTEGER NOT NULL,
	FORMAT INTEGER NOT NULL,
	BO INTEGER NOT NULL,
	GROUPS INTEGER NOT NULL,
	PARTICIPANTS INTEGER NOT NULL,
	ENABLED BOOLEAN NOT NULL,
	PRIMARY KEY (ID),
	FOREIGN KEY (COMPETITION) REFERENCES competition_data.COMPETITION (ID),
	FOREIGN KEY (FORMAT) REFERENCES master_data.FORMAT (ID),
	FOREIGN KEY (BO) REFERENCES master_data.BO (ID),
	UNIQUE (COMPETITION, PHASE)
);

/*Participant*/
CREATE TABLE competition_data.PARTICIPANT (
	ID INTEGER,
	PHASE INTEGER NOT NULL,
	ACCOUNT INTEGER NOT NULL,
	NGROUP INTEGER,
	CONFIRMED BOOLEAN,
	PRIMARY KEY (ID),
	FOREIGN KEY (PHASE) REFERENCES competition_data.PHASE (ID),
  FOREIGN KEY (ACCOUNT) REFERENCES user_data.ACCOUNT (ID),
	UNIQUE (PHASE, ACCOUNT)
);

/*Round*/
CREATE TABLE competition_data.ROUND (
  ID INTEGER,
  PHASE INTEGER NOT NULL,
  ROUND INTEGER NOT NULL,
  ENABLED BOOLEAN NOT NULL,
  PRIMARY KEY (ID),
  FOREIGN KEY (PHASE) REFERENCES competition_data.PHASE (ID),
  UNIQUE (PHASE, ROUND)
);
